# Specifies the build system requirements and backend
[build-system]
requires = [
    "hatchling",  # Build backend
    "hatch-vcs",  # Version control system plugin for dynamic versioning
    "setuptools", # Setuptools for compiling C extensions
    "wheel",      # Wheel for packaging
    "cython",     # Cython for compiling C extensions
    "numpy",      # NumPy for numerical operations and C extension includes
]
build-backend = "hatchling.build"


# Project metadata and configuration
[project]
name = "jcvi"
description = "Python utility libraries on genome assembly, annotation and comparative genomics"
readme = "README.md"
requires-python = ">=3.8,<3.13"
license = { text = "BSD-3-Clause" } # Note: Setuptools will not support dict format from Feb 2026, BUT hatchling requires it!
authors = [
    { name = "Haibao Tang", email = "tanghaibao@gmail.com" },
    { name = "Vivek Krishnakumar" },
    { name = "Adam Taranto" },
]

classifiers = [
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "biopython",
    "boto3",
    "brewer2mpl",
    "CrossMap",
    "cython",
    "deap",
    "ete3",
    "ftpretty",
    "genomepy",
    "gffutils",
    "goatools",
    "graphviz",
    "jinja2",
    "matplotlib",
    "more-itertools",
    "natsort",
    "networkx",
    "numpy<2",
    "ortools",
    "pybedtools",
    "pyefd",
    "pypdf",
    "pytesseract",
    "rich",
    "scikit-image",
    "scipy",
    "seaborn",
    "Wand",
    "webcolors",
]

dynamic = ["version"]

[project.optional-dependencies]
tests = ["hatch", "isort", "mock", "numpydoc-validation", "pre-commit", "pymdown-extensions", "pytest-benchmark", "pytest-cov", "pytest", "PyYAML"]

[project.urls]
homepage = "http://github.com/tanghaibao/jcvi"

# Command-line script entry point
[project.scripts]
jcvi = "jcvi.cli:main"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build]
packages = ["src"]

[tool.hatch.build.hooks.custom]
path = "build.py"

[tool.hatch.build.hooks.vcs]
version-file = "src/jcvi/_version.py"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.vcs]
tag-pattern = "v*"
fallback-version = "0.0.0"

[tool.hatch.build.targets.sdist]
include = ["src/**/*.py", "src/**/*.pyx", "README.md"]
force-include = { "build.py" = "build.py", "setup.py" = "setup.py" }
exclude = ["src/jcvi/**/*.so", "src/jcvi/**/*.pyd", "src/jcvi/**/*.c"]

[tool.hatch.build.targets.wheel]
packages = ["src/jcvi"]
artifacts = [
    "src/jcvi/**/*.so",  # Linux/Mac shared objects
    "src/jcvi/**/*.pyd", # Windows shared objects
    "src/jcvi/**/*.c",   # Generated C files
]

[tool.pytest.ini_options]
addopts = "-v --cov=jcvi --cov-branch --cov-report=xml --cov-report=term"
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.isort]
profile = "black"
known_third_party = ["Bio","pandas","numpy"]
known_first_party = ["jcvi"]
default_section = "THIRDPARTY"
force_sort_within_sections = true

[tool.numpydoc_validation]
checks = [
    "all",  # report on all checks
    "ES01", # but don't require an extended summary
    "EX01", # or examples
    "SA01", # or a see also section
    "SS06", # and don't require the summary to fit on one line
]
exclude = [  # don't report on checks for these
    '\.__init__$',
    '\.__repr__$',
    '\.__str__$',
]
override_SS05 = [  # allow docstrings to start with these words
    '^Process ',
    '^Assess ',
    '^Access ',
]
